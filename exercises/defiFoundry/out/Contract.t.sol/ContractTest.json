{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddingManyInvestors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddingManyInvestorsAndClaiming",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectPayoutAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff1916620100011790556103e8600d556005600e5534801561002c57600080fd5b506113868061003c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635015b144116100715780635015b144146100b657806366539a95146100b6578063ba414fa6146100f8578063f33cf57b14610110578063f8ccbf4714610118578063fa7626d41461012b57600080fd5b80630a9254e4146100ae5780631ac22470146100b85780633a768463146100c0578063468f5e58146100b65780634a4507ff146100b6575b600080fd5b6100b6610138565b005b6100b66102ed565b6100db737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6101006103d9565b60405190151581526020016100ef565b6100b6610504565b6000546101009062010000900460ff1681565b6000546101009060ff1681565b600d54600e5460405161014a90610773565b9182526020820152604001604051809103906000f080158015610171573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906107a1565b600980546001600160a01b0319166001600160a01b039290921691909117905560405161021c90610780565b604051809103906000f080158015610238573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905560405161026590610780565b604051809103906000f080158015610281573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516102ae90610780565b604051809103906000f0801580156102ca573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b15801561033657600080fd5b505af115801561034a573d6000803e3d6000fd5b5050600a54600854604051633feb5f2b60e01b8152600060048201526001600160a01b03928316945091169150633feb5f2b90602401602060405180830381865afa15801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c191906107a1565b6001600160a01b0316146103d7576103d76107c5565b565b60008054610100900460ff16156103f95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104ff5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610487917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161080b565b60408051601f19818403018152908290526104a19161082f565b6000604051808303816000865af19150503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b50915050808060200190518101906104fb919061083b565b9150505b919050565b600854600b5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b15801561054d57600080fd5b505af1158015610561573d6000803e3d6000fd5b5050600854600a5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b1580156105ae57600080fd5b505af11580156105c2573d6000803e3d6000fd5b5050600854600c5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b5050600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166348c54b9d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b5050600954600a546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610770919061085d565b50565b610a788061087783390190565b6062806112ef83390190565b6001600160a01b038116811461077057600080fd5b6000602082840312156107b357600080fd5b81516107be8161078c565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b818110156107fc57602081850181015186830152016107e2565b50600093019283525090919050565b6001600160e01b031983168152600061082760048301846107db565b949350505050565b60006107be82846107db565b60006020828403121561084d57600080fd5b815180151581146107be57600080fd5b60006020828403121561086f57600080fd5b505191905056fe608060405260008055600060035534801561001957600080fd5b50604051610a78380380610a788339810160408190526100389161009f565b604051829061004690610092565b908152602001604051809103906000f080158015610068573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055600355506100c3565b61062d8061044b83390190565b600080604083850312156100b257600080fd5b505080516020909101519092909150565b610379806100d26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633feb5f2b1461005c57806348c54b9d1461008c57806383c64ec414610096578063e641bde1146100ac578063fc0c546a1461011e575b600080fd5b61006f61006a366004610272565b610131565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461015b565b005b61009e610222565b604051908152602001610083565b6100946100ba36600461028b565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039093166001600160a01b031990931683179055600091825260026020526040909120805460ff19169091179055565b60045461006f906001600160a01b031681565b6001818154811061014157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff1615156001146101a85760405162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015260640160405180910390fd5b6004546001600160a01b031663a9059cbb336101c2610222565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561020857600080fd5b505af115801561021c573d6000803e3d6000fd5b50505050565b6000600a6102326103e8436102d1565b60035560015460005461024591906102fb565b905060035481610255919061030f565b6003805491925060006102678361032c565b909155509092915050565b60006020828403121561028457600080fd5b5035919050565b60006020828403121561029d57600080fd5b81356001600160a01b03811681146102b457600080fd5b9392505050565b634e487b7160e01b600052601260045260246000fd5b6000826102e0576102e06102bb565b500690565b634e487b7160e01b600052601160045260246000fd5b60008261030a5761030a6102bb565b500490565b8082028115828204841417610326576103266102e5565b92915050565b60008161033b5761033b6102e5565b50600019019056fea264697066735822122075533792f7b89b0a1325630dbc11d3c1ca7257e8ce3e7cf74bdc63708267c16164736f6c6343000811003360c0604052600860809081526726bc902a37b5b2b760c11b60a052600090610027908261014a565b5060408051808201909152600381526241424360e81b602082015260019061004f908261014a565b5034801561005c57600080fd5b5060405161062d38038061062d83398101604081905261007b91610209565b600281905533600081815260046020526040902091909155600380546001600160a01b0319169091179055610222565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100d557607f821691505b6020821081036100f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014557600081815260208120601f850160051c810160208610156101225750805b601f850160051c820191505b818110156101415782815560010161012e565b5050505b505050565b81516001600160401b03811115610163576101636100ab565b6101778161017184546100c1565b846100fb565b602080601f8311600181146101ac57600084156101945750858301515b600019600386901b1c1916600185901b178555610141565b600085815260208120601f198616915b828110156101db578886015182559484019460019091019084016101bc565b50858210156101f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561021b57600080fd5b5051919050565b6103fc806102316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610294565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102fe565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b610106366004610320565b6101a8565b005b6000805461011a9061034a565b80601f01602080910402602001604051908101604052809291908181526020018280546101469061034a565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a9061034a565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e90849061039a565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b9084906103b3565b90915550506040518181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156102c1578581018301518582016040015282016102a5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146102f957600080fd5b919050565b60006020828403121561031057600080fd5b610319826102e2565b9392505050565b6000806040838503121561033357600080fd5b61033c836102e2565b946020939093013593505050565b600181811c9082168061035e57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103ad576103ad610384565b92915050565b808201808211156103ad576103ad61038456fea2646970667358221220c4e6e75e7307c2ece1e0894428fb8241e59848e7c7fb3796d4e3c4488bc0278964736f6c634300081100336080604052348015600f57600080fd5b50604580601d6000396000f3fe608060405236600a57005b600080fdfea2646970667358221220e4f084b3aa803b32449fa7937ea869cb9864543bf764bcb24a9f0b7f4833138164736f6c63430008110033a264697066735822122046b59594d73e7ae22ace6a713e3b6960380a2acb56ad62c9c2375214bfa0a1c364736f6c63430008110033",
    "sourceMap": "276:1169:8:-:0;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;442:4:8;418:28;;474:1;452:23;;276:1169;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80635015b144116100715780635015b144146100b657806366539a95146100b6578063ba414fa6146100f8578063f33cf57b14610110578063f8ccbf4714610118578063fa7626d41461012b57600080fd5b80630a9254e4146100ae5780631ac22470146100b85780633a768463146100c0578063468f5e58146100b65780634a4507ff146100b6575b600080fd5b6100b6610138565b005b6100b66102ed565b6100db737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6101006103d9565b60405190151581526020016100ef565b6100b6610504565b6000546101009062010000900460ff1681565b6000546101009060ff1681565b600d54600e5460405161014a90610773565b9182526020820152604001604051809103906000f080158015610171573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa1580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f091906107a1565b600980546001600160a01b0319166001600160a01b039290921691909117905560405161021c90610780565b604051809103906000f080158015610238573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905560405161026590610780565b604051809103906000f080158015610281573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516102ae90610780565b604051809103906000f0801580156102ca573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b15801561033657600080fd5b505af115801561034a573d6000803e3d6000fd5b5050600a54600854604051633feb5f2b60e01b8152600060048201526001600160a01b03928316945091169150633feb5f2b90602401602060405180830381865afa15801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c191906107a1565b6001600160a01b0316146103d7576103d76107c5565b565b60008054610100900460ff16156103f95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156104ff5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610487917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161080b565b60408051601f19818403018152908290526104a19161082f565b6000604051808303816000865af19150503d80600081146104de576040519150601f19603f3d011682016040523d82523d6000602084013e6104e3565b606091505b50915050808060200190518101906104fb919061083b565b9150505b919050565b600854600b5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b15801561054d57600080fd5b505af1158015610561573d6000803e3d6000fd5b5050600854600a5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b1580156105ae57600080fd5b505af11580156105c2573d6000803e3d6000fd5b5050600854600c5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b5050600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166348c54b9d6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b5050600954600a546040516370a0823160e01b81526001600160a01b039182166004820152911692506370a082319150602401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610770919061085d565b50565b610a788061087783390190565b6062806112ef83390190565b6001600160a01b038116811461077057600080fd5b6000602082840312156107b357600080fd5b81516107be8161078c565b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b818110156107fc57602081850181015186830152016107e2565b50600093019283525090919050565b6001600160e01b031983168152600061082760048301846107db565b949350505050565b60006107be82846107db565b60006020828403121561084d57600080fd5b815180151581146107be57600080fd5b60006020828403121561086f57600080fd5b505191905056fe608060405260008055600060035534801561001957600080fd5b50604051610a78380380610a788339810160408190526100389161009f565b604051829061004690610092565b908152602001604051809103906000f080158015610068573d6000803e3d6000fd5b50600480546001600160a01b0319166001600160a01b0392909216919091179055600355506100c3565b61062d8061044b83390190565b600080604083850312156100b257600080fd5b505080516020909101519092909150565b610379806100d26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633feb5f2b1461005c57806348c54b9d1461008c57806383c64ec414610096578063e641bde1146100ac578063fc0c546a1461011e575b600080fd5b61006f61006a366004610272565b610131565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461015b565b005b61009e610222565b604051908152602001610083565b6100946100ba36600461028b565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039093166001600160a01b031990931683179055600091825260026020526040909120805460ff19169091179055565b60045461006f906001600160a01b031681565b6001818154811061014157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526002602052604090205460ff1615156001146101a85760405162461bcd60e51b81526020600482015260026024820152616e6f60f01b604482015260640160405180910390fd5b6004546001600160a01b031663a9059cbb336101c2610222565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561020857600080fd5b505af115801561021c573d6000803e3d6000fd5b50505050565b6000600a6102326103e8436102d1565b60035560015460005461024591906102fb565b905060035481610255919061030f565b6003805491925060006102678361032c565b909155509092915050565b60006020828403121561028457600080fd5b5035919050565b60006020828403121561029d57600080fd5b81356001600160a01b03811681146102b457600080fd5b9392505050565b634e487b7160e01b600052601260045260246000fd5b6000826102e0576102e06102bb565b500690565b634e487b7160e01b600052601160045260246000fd5b60008261030a5761030a6102bb565b500490565b8082028115828204841417610326576103266102e5565b92915050565b60008161033b5761033b6102e5565b50600019019056fea264697066735822122075533792f7b89b0a1325630dbc11d3c1ca7257e8ce3e7cf74bdc63708267c16164736f6c6343000811003360c0604052600860809081526726bc902a37b5b2b760c11b60a052600090610027908261014a565b5060408051808201909152600381526241424360e81b602082015260019061004f908261014a565b5034801561005c57600080fd5b5060405161062d38038061062d83398101604081905261007b91610209565b600281905533600081815260046020526040902091909155600380546001600160a01b0319169091179055610222565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100d557607f821691505b6020821081036100f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014557600081815260208120601f850160051c810160208610156101225750805b601f850160051c820191505b818110156101415782815560010161012e565b5050505b505050565b81516001600160401b03811115610163576101636100ab565b6101778161017184546100c1565b846100fb565b602080601f8311600181146101ac57600084156101945750858301515b600019600386901b1c1916600185901b178555610141565b600085815260208120601f198616915b828110156101db578886015182559484019460019091019084016101bc565b50858210156101f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561021b57600080fd5b5051919050565b6103fc806102316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610294565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102fe565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b610106366004610320565b6101a8565b005b6000805461011a9061034a565b80601f01602080910402602001604051908101604052809291908181526020018280546101469061034a565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a9061034a565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e90849061039a565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b9084906103b3565b90915550506040518181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156102c1578581018301518582016040015282016102a5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146102f957600080fd5b919050565b60006020828403121561031057600080fd5b610319826102e2565b9392505050565b6000806040838503121561033357600080fd5b61033c836102e2565b946020939093013593505050565b600181811c9082168061035e57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103ad576103ad610384565b92915050565b808201808211156103ad576103ad61038456fea2646970667358221220c4e6e75e7307c2ece1e0894428fb8241e59848e7c7fb3796d4e3c4488bc0278964736f6c634300081100336080604052348015600f57600080fd5b50604580601d6000396000f3fe608060405236600a57005b600080fdfea2646970667358221220e4f084b3aa803b32449fa7937ea869cb9864543bf764bcb24a9f0b7f4833138164736f6c63430008110033a264697066735822122046b59594d73e7ae22ace6a713e3b6960380a2acb56ad62c9c2375214bfa0a1c364736f6c63430008110033",
    "sourceMap": "276:1169:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:312;;;:::i;:::-;;859:136;;;:::i;316:38:1:-;;245:64;316:38;;;;;-1:-1:-1;;;;;189:32:9;;;171:51;;159:2;144:18;316:38:1;;;;;;;;1819:584:0;;;:::i;:::-;;;398:14:9;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:9;1001:262:8;;;:::i;165:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;482:312:8;533:13;;548:11;;523:37;;;;;:::i;:::-;599:25:9;;;655:2;640:18;;633:34;587:2;572:18;523:37:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;516:4:8;:44;;-1:-1:-1;;;;;;516:44:8;-1:-1:-1;;;;;516:44:8;;;;;;;;;692:12;;;-1:-1:-1;;;692:12:8;;;;:10;;:12;;;;;;;;;;;;;;;516:44;692:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:5;:27;;-1:-1:-1;;;;;;678:27:8;-1:-1:-1;;;;;678:27:8;;;;;;;;;;723:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;715:5:8;:18;;-1:-1:-1;;;;;;715:18:8;-1:-1:-1;;;;;715:18:8;;;;;;;;;;749:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:3:8;:16;;-1:-1:-1;;;;;;743:16:8;-1:-1:-1;;;;;743:16:8;;;;;;;;;;777:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;769:5:8;:18;;-1:-1:-1;;;;;;769:18:8;-1:-1:-1;;;;;769:18:8;;;;;;;;;;482:312::o;859:136::-;903:4;;928:5;;903:32;;-1:-1:-1;;;903:32:8;;-1:-1:-1;;;;;928:5:8;;;903:32;;;171:51:9;903:4:8;;;:16;;144:18:9;;903:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;981:5:8;;952:4;;:17;;-1:-1:-1;;;952:17:8;;981:5;952:17;;;1461:25:9;-1:-1:-1;;;;;981:5:8;;;;-1:-1:-1;952:4:8;;;-1:-1:-1;952:14:8;;1434:18:9;;952:17:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;952:35:8;;945:43;;;;:::i;:::-;859:136::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;2066:51:9;;;-1:-1:-1;;;2133:18:9;;;2126:34;2196:43:0;;;;;;;;;2039:18:9;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1001:262:8:-;1039:4;;1064:3;;1039:30;;-1:-1:-1;;;1039:30:8;;-1:-1:-1;;;;;1064:3:8;;;1039:30;;;171:51:9;1039:4:8;;;:16;;144:18:9;;1039:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1079:4:8;;1104:5;;1079:32;;-1:-1:-1;;;1079:32:8;;-1:-1:-1;;;;;1104:5:8;;;1079:32;;;171:51:9;1079:4:8;;;-1:-1:-1;1079:16:8;;-1:-1:-1;144:18:9;;1079:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1121:4:8;;1146:5;;1121:32;;-1:-1:-1;;;1121:32:8;;-1:-1:-1;;;;;1146:5:8;;;1121:32;;;171:51:9;1121:4:8;;;-1:-1:-1;1121:16:8;;-1:-1:-1;144:18:9;;1121:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1180:5:8;;1163:24;;-1:-1:-1;;;1163:24:8;;-1:-1:-1;;;;;1180:5:8;;;1163:24;;;171:51:9;245:64:1;;-1:-1:-1;1163:8:8;;-1:-1:-1;144:18:9;;1163:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:4;;;;;;;;;-1:-1:-1;;;;;1197:4:8;-1:-1:-1;;;;;1197:16:8;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1225:5:8;;1249;;1225:31;;-1:-1:-1;;;1225:31:8;;-1:-1:-1;;;;;1249:5:8;;;1225:31;;;171:51:9;1225:5:8;;;-1:-1:-1;1225:15:8;;-1:-1:-1;144:18:9;;1225:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1001:262::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;678:138:9:-;-1:-1:-1;;;;;760:31:9;;750:42;;740:70;;806:1;803;796:12;821:273;906:6;959:2;947:9;938:7;934:23;930:32;927:52;;;975:1;972;965:12;927:52;1007:9;1001:16;1026:38;1058:5;1026:38;:::i;:::-;1083:5;821:273;-1:-1:-1;;;821:273:9:o;1760:127::-;1821:10;1816:3;1812:20;1809:1;1802:31;1852:4;1849:1;1842:15;1876:4;1873:1;1866:15;2171:322;2212:3;2250:5;2244:12;2274:1;2284:128;2298:6;2295:1;2292:13;2284:128;;;2395:4;2380:13;;;2376:24;;2370:31;2357:11;;;2350:52;2313:12;2284:128;;;-1:-1:-1;2467:1:9;2431:16;;2456:13;;;-1:-1:-1;2431:16:9;;2171:322;-1:-1:-1;2171:322:9:o;2498:278::-;-1:-1:-1;;;;;;2683:33:9;;2671:46;;2653:3;2733:37;2767:1;2758:11;;2750:6;2733:37;:::i;:::-;2726:44;2498:278;-1:-1:-1;;;;2498:278:9:o;2781:189::-;2910:3;2935:29;2960:3;2952:6;2935:29;:::i;2975:277::-;3042:6;3095:2;3083:9;3074:7;3070:23;3066:32;3063:52;;;3111:1;3108;3101:12;3063:52;3143:9;3137:16;3196:5;3189:13;3182:21;3175:5;3172:32;3162:60;;3218:1;3215;3208:12;3257:184;3327:6;3380:2;3368:9;3359:7;3355:23;3351:32;3348:52;;;3396:1;3393;3386:12;3348:52;-1:-1:-1;3419:16:9;;3257:184;-1:-1:-1;3257:184:9:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAddInvestor()": "1ac22470",
    "testAddingManyInvestors()": "66539a95",
    "testAddingManyInvestorsAndClaiming()": "468f5e58",
    "testClaim()": "f33cf57b",
    "testCorrectPayoutAmount()": "5015b144",
    "testInitialBalance()": "4a4507ff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddingManyInvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddingManyInvestorsAndClaiming\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectPayoutAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Contract.t.sol\":\"ContractTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x4424dbcb8f5b741475445726f87408fcd89951fad973bec2ca442ee157f910e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0b9f6dfb69245d8f888558ae82bf1d2cdeace46201444fe4b2e6a5283f944a\",\"dweb:/ipfs/QmWFSKeFEZngNcwNn7A84EF7pASo5qe6r5oK24r9Kwca7Z\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa85dee62f7a3d7d3b26051f28d08bbfaa6d76888b8e64395583c35f11070372b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3ecace3d6120731c4520f651c36658940df958755a2c86d6bf0ec895320a915\",\"dweb:/ipfs/QmVGbUYLtMsAYF3C27qHKs3VHRuRNDypuDfs4XGK47kqUT\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x63fc2487cf3a6650d933e18bcb61766f15f74c327192381806ea00f8f6446f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aad99f7b2ed3b11ff6c17b84b4196c562898640a80cabc2c28c87c116099a00f\",\"dweb:/ipfs/QmQNNbxHabRycegyXwJWBDutrdcScAP2SU5zEvorWEaFpx\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/DeFi1.sol\":{\"keccak256\":\"0xb5f7f5093a861d084e3dfad2d86cfefa2412d35fe406de5e9c4939ff3f03eb2a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7d6ec4794305591c9788dd88a74b384137ff052d0a8b28f69697e71974cfec90\",\"dweb:/ipfs/Qmb65W6LTwibcYhJNbezrLFLp8p8sdjTm7CyQL46tCinQr\"]},\"src/Token.sol\":{\"keccak256\":\"0xc128ea36321186ceaeb80b8ea67294297782c7e6937619e5c56b64668c6841d6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f75af6fe591e82712f873da5757e178d5f6a1d01e60bc89370d741f5485e9249\",\"dweb:/ipfs/QmWutBGXhLwUxGNQ59MH5ajSWWfc7YJWH9Sy9zbBAufkaq\"]},\"test/Contract.t.sol\":{\"keccak256\":\"0x329c64aae62e39fd66a58ed4ce06e36bf78f753abd7414deade12ee296554e27\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0bc20d0b0e2ad25c002bc4dcaf9115098fea95961348d3a551eac47efe86cb06\",\"dweb:/ipfs/QmcJGcNUq7KdwXUPkLN2HkbCpZS7rWFDZhv3k9KstZJBwt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddingManyInvestors"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddingManyInvestorsAndClaiming"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectPayoutAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialBalance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Contract.t.sol": "ContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x4424dbcb8f5b741475445726f87408fcd89951fad973bec2ca442ee157f910e7",
        "urls": [
          "bzz-raw://5b0b9f6dfb69245d8f888558ae82bf1d2cdeace46201444fe4b2e6a5283f944a",
          "dweb:/ipfs/QmWFSKeFEZngNcwNn7A84EF7pASo5qe6r5oK24r9Kwca7Z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa85dee62f7a3d7d3b26051f28d08bbfaa6d76888b8e64395583c35f11070372b",
        "urls": [
          "bzz-raw://f3ecace3d6120731c4520f651c36658940df958755a2c86d6bf0ec895320a915",
          "dweb:/ipfs/QmVGbUYLtMsAYF3C27qHKs3VHRuRNDypuDfs4XGK47kqUT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x63fc2487cf3a6650d933e18bcb61766f15f74c327192381806ea00f8f6446f66",
        "urls": [
          "bzz-raw://aad99f7b2ed3b11ff6c17b84b4196c562898640a80cabc2c28c87c116099a00f",
          "dweb:/ipfs/QmQNNbxHabRycegyXwJWBDutrdcScAP2SU5zEvorWEaFpx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/DeFi1.sol": {
        "keccak256": "0xb5f7f5093a861d084e3dfad2d86cfefa2412d35fe406de5e9c4939ff3f03eb2a",
        "urls": [
          "bzz-raw://7d6ec4794305591c9788dd88a74b384137ff052d0a8b28f69697e71974cfec90",
          "dweb:/ipfs/Qmb65W6LTwibcYhJNbezrLFLp8p8sdjTm7CyQL46tCinQr"
        ],
        "license": "UNLICENSED"
      },
      "src/Token.sol": {
        "keccak256": "0xc128ea36321186ceaeb80b8ea67294297782c7e6937619e5c56b64668c6841d6",
        "urls": [
          "bzz-raw://f75af6fe591e82712f873da5757e178d5f6a1d01e60bc89370d741f5485e9249",
          "dweb:/ipfs/QmWutBGXhLwUxGNQ59MH5ajSWWfc7YJWH9Sy9zbBAufkaq"
        ],
        "license": "UNLICENSED"
      },
      "test/Contract.t.sol": {
        "keccak256": "0x329c64aae62e39fd66a58ed4ce06e36bf78f753abd7414deade12ee296554e27",
        "urls": [
          "bzz-raw://0bc20d0b0e2ad25c002bc4dcaf9115098fea95961348d3a551eac47efe86cb06",
          "dweb:/ipfs/QmcJGcNUq7KdwXUPkLN2HkbCpZS7rWFDZhv3k9KstZJBwt"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 21946,
    "exportedSymbols": {
      "ContractTest": [
        21945
      ],
      "DSTest": [
        1786
      ],
      "DeFi1": [
        21672
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3553
      ],
      "Test": [
        3455
      ],
      "Token": [
        21771
      ],
      "User": [
        21784
      ],
      "Vm": [
        5423
      ],
      "console": [
        13487
      ],
      "console2": [
        21551
      ],
      "stdError": [
        3525
      ],
      "stdMath": [
        4794
      ],
      "stdStorage": [
        4655
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1407:8",
    "nodes": [
      {
        "id": 21773,
        "nodeType": "PragmaDirective",
        "src": "39:24:8",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21774,
        "nodeType": "ImportDirective",
        "src": "65:26:8",
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21946,
        "sourceUnit": 5424,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21775,
        "nodeType": "ImportDirective",
        "src": "92:28:8",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21946,
        "sourceUnit": 4795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21777,
        "nodeType": "ImportDirective",
        "src": "121:46:8",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21946,
        "sourceUnit": 13488,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21776,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13487,
              "src": "129:7:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 21778,
        "nodeType": "ImportDirective",
        "src": "168:26:8",
        "absolutePath": "src/DeFi1.sol",
        "file": "../src/DeFi1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21946,
        "sourceUnit": 21673,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21779,
        "nodeType": "ImportDirective",
        "src": "195:26:8",
        "absolutePath": "src/Token.sol",
        "file": "../src/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21946,
        "sourceUnit": 21772,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21784,
        "nodeType": "ContractDefinition",
        "src": "223:51:8",
        "nodes": [
          {
            "id": 21783,
            "nodeType": "FunctionDefinition",
            "src": "243:29:8",
            "body": {
              "id": 21782,
              "nodeType": "Block",
              "src": "270:2:8",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "250:2:8"
            },
            "returnParameters": {
              "id": 21781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "270:0:8"
            },
            "scope": 21784,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21784
        ],
        "name": "User",
        "nameLocation": "232:4:8",
        "scope": 21946,
        "usedErrors": []
      },
      {
        "id": 21945,
        "nodeType": "ContractDefinition",
        "src": "276:1169:8",
        "nodes": [
          {
            "id": 21789,
            "nodeType": "VariableDeclaration",
            "src": "312:10:8",
            "constant": false,
            "mutability": "mutable",
            "name": "defi",
            "nameLocation": "318:4:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeFi1_$21672",
              "typeString": "contract DeFi1"
            },
            "typeName": {
              "id": 21788,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21787,
                "name": "DeFi1",
                "nameLocations": [
                  "312:5:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21672,
                "src": "312:5:8"
              },
              "referencedDeclaration": 21672,
              "src": "312:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeFi1_$21672",
                "typeString": "contract DeFi1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21792,
            "nodeType": "VariableDeclaration",
            "src": "328:11:8",
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "334:5:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$21771",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 21791,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21790,
                "name": "Token",
                "nameLocations": [
                  "328:5:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21771,
                "src": "328:5:8"
              },
              "referencedDeclaration": 21771,
              "src": "328:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$21771",
                "typeString": "contract Token"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21795,
            "nodeType": "VariableDeclaration",
            "src": "345:19:8",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "359:5:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21784",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21794,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21793,
                "name": "User",
                "nameLocations": [
                  "345:4:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21784,
                "src": "345:4:8"
              },
              "referencedDeclaration": 21784,
              "src": "345:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21784",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21798,
            "nodeType": "VariableDeclaration",
            "src": "370:17:8",
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "384:3:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21784",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21797,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21796,
                "name": "User",
                "nameLocations": [
                  "370:4:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21784,
                "src": "370:4:8"
              },
              "referencedDeclaration": 21784,
              "src": "370:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21784",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21801,
            "nodeType": "VariableDeclaration",
            "src": "393:19:8",
            "constant": false,
            "mutability": "mutable",
            "name": "chloe",
            "nameLocation": "407:5:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21784",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21800,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21799,
                "name": "User",
                "nameLocations": [
                  "393:4:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21784,
                "src": "393:4:8"
              },
              "referencedDeclaration": 21784,
              "src": "393:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21784",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21804,
            "nodeType": "VariableDeclaration",
            "src": "418:28:8",
            "constant": false,
            "mutability": "mutable",
            "name": "initialAmount",
            "nameLocation": "426:13:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21802,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "418:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 21803,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "442:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "id": 21807,
            "nodeType": "VariableDeclaration",
            "src": "452:23:8",
            "constant": false,
            "mutability": "mutable",
            "name": "blockReward",
            "nameLocation": "460:11:8",
            "scope": 21945,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21805,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 21806,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "474:1:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "id": 21849,
            "nodeType": "FunctionDefinition",
            "src": "482:312:8",
            "body": {
              "id": 21848,
              "nodeType": "Block",
              "src": "506:288:8",
              "statements": [
                {
                  "expression": {
                    "id": 21817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21810,
                      "name": "defi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21789,
                      "src": "516:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeFi1_$21672",
                        "typeString": "contract DeFi1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21814,
                          "name": "initialAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21804,
                          "src": "533:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 21815,
                          "name": "blockReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21807,
                          "src": "548:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 21813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "523:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_DeFi1_$21672_$",
                          "typeString": "function (uint256,uint256) returns (contract DeFi1)"
                        },
                        "typeName": {
                          "id": 21812,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21811,
                            "name": "DeFi1",
                            "nameLocations": [
                              "527:5:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21672,
                            "src": "527:5:8"
                          },
                          "referencedDeclaration": 21672,
                          "src": "527:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeFi1_$21672",
                            "typeString": "contract DeFi1"
                          }
                        }
                      },
                      "id": 21816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "523:37:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeFi1_$21672",
                        "typeString": "contract DeFi1"
                      }
                    },
                    "src": "516:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeFi1_$21672",
                      "typeString": "contract DeFi1"
                    }
                  },
                  "id": 21818,
                  "nodeType": "ExpressionStatement",
                  "src": "516:44:8"
                },
                {
                  "expression": {
                    "id": 21825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21819,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21792,
                      "src": "678:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$21771",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 21821,
                              "name": "defi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21789,
                              "src": "692:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeFi1_$21672",
                                "typeString": "contract DeFi1"
                              }
                            },
                            "id": 21822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "697:5:8",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21570,
                            "src": "692:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Token_$21771_$",
                              "typeString": "function () view external returns (contract Token)"
                            }
                          },
                          "id": 21823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "692:12:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Token_$21771",
                            "typeString": "contract Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Token_$21771",
                            "typeString": "contract Token"
                          }
                        ],
                        "id": 21820,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21771,
                        "src": "686:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$21771_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 21824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "686:19:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$21771",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "678:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$21771",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 21826,
                  "nodeType": "ExpressionStatement",
                  "src": "678:27:8"
                },
                {
                  "expression": {
                    "id": 21832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21827,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21795,
                      "src": "715:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "723:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21784_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21829,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21828,
                            "name": "User",
                            "nameLocations": [
                              "727:4:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21784,
                            "src": "727:4:8"
                          },
                          "referencedDeclaration": 21784,
                          "src": "727:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21784",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "723:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "src": "715:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21784",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21833,
                  "nodeType": "ExpressionStatement",
                  "src": "715:18:8"
                },
                {
                  "expression": {
                    "id": 21839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21834,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21798,
                      "src": "743:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "749:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21784_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21836,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21835,
                            "name": "User",
                            "nameLocations": [
                              "753:4:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21784,
                            "src": "753:4:8"
                          },
                          "referencedDeclaration": 21784,
                          "src": "753:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21784",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "749:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "src": "743:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21784",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21840,
                  "nodeType": "ExpressionStatement",
                  "src": "743:16:8"
                },
                {
                  "expression": {
                    "id": 21846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21841,
                      "name": "chloe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21801,
                      "src": "769:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "777:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21784_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21843,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21842,
                            "name": "User",
                            "nameLocations": [
                              "781:4:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21784,
                            "src": "781:4:8"
                          },
                          "referencedDeclaration": 21784,
                          "src": "781:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21784",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "777:10:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21784",
                        "typeString": "contract User"
                      }
                    },
                    "src": "769:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21784",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21847,
                  "nodeType": "ExpressionStatement",
                  "src": "769:18:8"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "491:5:8",
            "parameters": {
              "id": 21808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:2:8"
            },
            "returnParameters": {
              "id": 21809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21853,
            "nodeType": "FunctionDefinition",
            "src": "800:53:8",
            "body": {
              "id": 21852,
              "nodeType": "Block",
              "src": "837:16:8",
              "statements": []
            },
            "functionSelector": "4a4507ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialBalance",
            "nameLocation": "809:18:8",
            "parameters": {
              "id": 21850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:2:8"
            },
            "returnParameters": {
              "id": 21851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21878,
            "nodeType": "FunctionDefinition",
            "src": "859:136:8",
            "body": {
              "id": 21877,
              "nodeType": "Block",
              "src": "893:102:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21861,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21795,
                            "src": "928:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "920:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "920:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "920:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21856,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21789,
                        "src": "903:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21672",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "908:11:8",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21613,
                      "src": "903:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21864,
                  "nodeType": "ExpressionStatement",
                  "src": "903:32:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "967:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 21866,
                              "name": "defi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21789,
                              "src": "952:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeFi1_$21672",
                                "typeString": "contract DeFi1"
                              }
                            },
                            "id": 21867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "957:9:8",
                            "memberName": "investors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21560,
                            "src": "952:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 21869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "952:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 21872,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21795,
                              "src": "981:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$21784",
                                "typeString": "contract User"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_User_$21784",
                                "typeString": "contract User"
                              }
                            ],
                            "id": 21871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "973:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21870,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "973:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "973:14:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "952:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21865,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "945:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21876,
                  "nodeType": "ExpressionStatement",
                  "src": "945:43:8"
                }
              ]
            },
            "functionSelector": "1ac22470",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddInvestor",
            "nameLocation": "868:15:8",
            "parameters": {
              "id": 21854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:2:8"
            },
            "returnParameters": {
              "id": 21855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21932,
            "nodeType": "FunctionDefinition",
            "src": "1001:262:8",
            "body": {
              "id": 21931,
              "nodeType": "Block",
              "src": "1029:234:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21886,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21798,
                            "src": "1064:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1056:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1056:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1056:12:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21881,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21789,
                        "src": "1039:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21672",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1044:11:8",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21613,
                      "src": "1039:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21889,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21895,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21795,
                            "src": "1104:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1096:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1096:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1096:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21890,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21789,
                        "src": "1079:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21672",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1084:11:8",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21613,
                      "src": "1079:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1079:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21898,
                  "nodeType": "ExpressionStatement",
                  "src": "1079:32:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21904,
                            "name": "chloe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21801,
                            "src": "1146:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1138:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1138:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1138:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21899,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21789,
                        "src": "1121:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21672",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1126:11:8",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21613,
                      "src": "1121:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21907,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:32:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21913,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21795,
                            "src": "1180:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1172:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21911,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1172:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1172:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21908,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1163:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1166:5:8",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1163:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:24:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21916,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:24:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21917,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21789,
                        "src": "1197:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21672",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1202:11:8",
                      "memberName": "claimTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21636,
                      "src": "1197:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1197:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21921,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:18:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21927,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21795,
                            "src": "1249:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21784",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1241:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1241:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1241:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21922,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21792,
                        "src": "1225:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$21771",
                          "typeString": "contract Token"
                        }
                      },
                      "id": 21924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1231:9:8",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21770,
                      "src": "1225:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 21929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 21930,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:31:8"
                }
              ]
            },
            "functionSelector": "f33cf57b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "1010:9:8",
            "parameters": {
              "id": 21879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:2:8"
            },
            "returnParameters": {
              "id": 21880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21936,
            "nodeType": "FunctionDefinition",
            "src": "1269:50:8",
            "body": {
              "id": 21935,
              "nodeType": "Block",
              "src": "1311:8:8",
              "statements": []
            },
            "functionSelector": "5015b144",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectPayoutAmount",
            "nameLocation": "1278:23:8",
            "parameters": {
              "id": 21933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:2:8"
            },
            "returnParameters": {
              "id": 21934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1311:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21940,
            "nodeType": "FunctionDefinition",
            "src": "1325:50:8",
            "body": {
              "id": 21939,
              "nodeType": "Block",
              "src": "1367:8:8",
              "statements": []
            },
            "functionSelector": "66539a95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddingManyInvestors",
            "nameLocation": "1334:23:8",
            "parameters": {
              "id": 21937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:2:8"
            },
            "returnParameters": {
              "id": 21938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21944,
            "nodeType": "FunctionDefinition",
            "src": "1381:61:8",
            "body": {
              "id": 21943,
              "nodeType": "Block",
              "src": "1434:8:8",
              "statements": []
            },
            "functionSelector": "468f5e58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddingManyInvestorsAndClaiming",
            "nameLocation": "1390:34:8",
            "parameters": {
              "id": 21941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:8"
            },
            "returnParameters": {
              "id": 21942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:8"
            },
            "scope": 21945,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21785,
              "name": "Test",
              "nameLocations": [
                "301:4:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3455,
              "src": "301:4:8"
            },
            "id": 21786,
            "nodeType": "InheritanceSpecifier",
            "src": "301:4:8"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          21672,
          21784
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21945,
          3455,
          2022,
          1786
        ],
        "name": "ContractTest",
        "nameLocation": "285:12:8",
        "scope": 21946,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 8
}