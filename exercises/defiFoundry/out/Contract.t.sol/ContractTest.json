{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddInvestor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddingManyInvestors",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddingManyInvestorsAndClaiming",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCorrectPayoutAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff1916620100011790556103e8600d556005600e5534801561002c57600080fd5b506112b48061003c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635015b144116100715780635015b144146100b657806366539a95146100b6578063ba414fa6146100f8578063f33cf57b14610110578063f8ccbf4714610118578063fa7626d41461012b57600080fd5b80630a9254e4146100ae5780631ac22470146100b85780633a768463146100c0578063468f5e58146100b65780634a4507ff146100b6575b600080fd5b6100b6610138565b005b6100b661027a565b6100db737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b610100610366565b60405190151581526020016100ef565b6100b6610491565b6000546101009062010000900460ff1681565b6000546101009060ff1681565b600d54600e5460405161014a90610693565b9182526020820152604001604051809103906000f080158015610171573d6000803e3d6000fd5b50600880546001600160a01b03929092166001600160a01b03199283168117909155600980549092161790556040516101a9906106a0565b604051809103906000f0801580156101c5573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040516101f2906106a0565b604051809103906000f08015801561020e573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560405161023b906106a0565b604051809103906000f080158015610257573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b5050600a54600854604051633feb5f2b60e01b8152600060048201526001600160a01b03928316945091169150633feb5f2b90602401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906106ac565b6001600160a01b031614610364576103646106dc565b565b60008054610100900460ff16156103865750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561048c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610414917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610722565b60408051601f198184030181529082905261042e91610746565b6000604051808303816000865af19150503d806000811461046b576040519150601f19603f3d011682016040523d82523d6000602084013e610470565b606091505b50915050808060200190518101906104889190610752565b9150505b919050565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b5050600854600b5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b5050600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166348c54b9d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561067957600080fd5b505af115801561068d573d6000803e3d6000fd5b50505050565b610aa88061077583390190565b60628061121d83390190565b6000602082840312156106be57600080fd5b81516001600160a01b03811681146106d557600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b8181101561071357602081850181015186830152016106f9565b50600093019283525090919050565b6001600160e01b031983168152600061073e60048301846106f2565b949350505050565b60006106d582846106f2565b60006020828403121561076457600080fd5b815180151581146106d557600080fdfe608060405260008055600060025534801561001957600080fd5b50604051610aa8380380610aa88339810160408190526100389161009f565b604051829061004690610092565b908152602001604051809103906000f080158015610068573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055600255506100c3565b61062d8061047b83390190565b600080604083850312156100b257600080fd5b505080516020909101519092909150565b6103a9806100d26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633feb5f2b1461005c57806348c54b9d1461008c57806383c64ec414610096578063e641bde1146100ac578063fc0c546a1461010b575b600080fd5b61006f61006a366004610273565b61011e565b6040516001600160a01b0390911681526020015b60405180910390f35b610094610148565b005b61009e61022c565b604051908152602001610083565b6100946100ba36600461028c565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b60035461006f906001600160a01b031681565b6001818154811061012e57600080fd5b6000918252602090912001546001600160a01b0316905081565b60008060005b6001548110156101af57336001600160a01b031660018281548110610175576101756102bc565b6000918252602090912001546001600160a01b031603610198576001925061019d565b600092505b806101a7816102e8565b91505061014e565b508115156001036101c4576101c261022c565b505b60035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401600060405180830381600087803b15801561021057600080fd5b505af1158015610224573d6000803e3d6000fd5b505050505050565b60025460009081906102406103e843610317565b6001546000549192506102529161032b565b915061025e818361033f565b91508061026a8161035c565b50919392505050565b60006020828403121561028557600080fd5b5035919050565b60006020828403121561029e57600080fd5b81356001600160a01b03811681146102b557600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016102fa576102fa6102d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261032657610326610301565b500690565b60008261033a5761033a610301565b500490565b8082028115828204841417610356576103566102d2565b92915050565b60008161036b5761036b6102d2565b50600019019056fea26469706673582212207e4fea0eb9134e19400e0c208b24bf3210915750d753e717f3cbdf659d9d7dc964736f6c6343000811003360c0604052600860809081526726bc902a37b5b2b760c11b60a052600090610027908261014a565b5060408051808201909152600381526241424360e81b602082015260019061004f908261014a565b5034801561005c57600080fd5b5060405161062d38038061062d83398101604081905261007b91610209565b600281905533600081815260046020526040902091909155600380546001600160a01b0319169091179055610222565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100d557607f821691505b6020821081036100f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014557600081815260208120601f850160051c810160208610156101225750805b601f850160051c820191505b818110156101415782815560010161012e565b5050505b505050565b81516001600160401b03811115610163576101636100ab565b6101778161017184546100c1565b846100fb565b602080601f8311600181146101ac57600084156101945750858301515b600019600386901b1c1916600185901b178555610141565b600085815260208120601f198616915b828110156101db578886015182559484019460019091019084016101bc565b50858210156101f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561021b57600080fd5b5051919050565b6103fc806102316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610294565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102fe565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b610106366004610320565b6101a8565b005b6000805461011a9061034a565b80601f01602080910402602001604051908101604052809291908181526020018280546101469061034a565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a9061034a565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e90849061039a565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b9084906103b3565b90915550506040518181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156102c1578581018301518582016040015282016102a5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146102f957600080fd5b919050565b60006020828403121561031057600080fd5b610319826102e2565b9392505050565b6000806040838503121561033357600080fd5b61033c836102e2565b946020939093013593505050565b600181811c9082168061035e57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103ad576103ad610384565b92915050565b808201808211156103ad576103ad61038456fea2646970667358221220c4e6e75e7307c2ece1e0894428fb8241e59848e7c7fb3796d4e3c4488bc0278964736f6c634300081100336080604052348015600f57600080fd5b50604580601d6000396000f3fe608060405236600a57005b600080fdfea2646970667358221220284233ea8c4d97e938847d856bfea3d4c6193f1f099b71139971ef1ad6e1b53b64736f6c63430008110033a264697066735822122056a73392d2150261066321a5548bbd854a084ce3df94328f4554d27897a15e4464736f6c63430008110033",
    "sourceMap": "261:1005:9:-:0;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;427:4:9;403:28;;459:1;437:23;;261:1005;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80635015b144116100715780635015b144146100b657806366539a95146100b6578063ba414fa6146100f8578063f33cf57b14610110578063f8ccbf4714610118578063fa7626d41461012b57600080fd5b80630a9254e4146100ae5780631ac22470146100b85780633a768463146100c0578063468f5e58146100b65780634a4507ff146100b6575b600080fd5b6100b6610138565b005b6100b661027a565b6100db737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b610100610366565b60405190151581526020016100ef565b6100b6610491565b6000546101009062010000900460ff1681565b6000546101009060ff1681565b600d54600e5460405161014a90610693565b9182526020820152604001604051809103906000f080158015610171573d6000803e3d6000fd5b50600880546001600160a01b03929092166001600160a01b03199283168117909155600980549092161790556040516101a9906106a0565b604051809103906000f0801580156101c5573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169190911790556040516101f2906106a0565b604051809103906000f08015801561020e573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905560405161023b906106a0565b604051809103906000f080158015610257573d6000803e3d6000fd5b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b5050600a54600854604051633feb5f2b60e01b8152600060048201526001600160a01b03928316945091169150633feb5f2b90602401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906106ac565b6001600160a01b031614610364576103646106dc565b565b60008054610100900460ff16156103865750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561048c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610414917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610722565b60408051601f198184030181529082905261042e91610746565b6000604051808303816000865af19150503d806000811461046b576040519150601f19603f3d011682016040523d82523d6000602084013e610470565b606091505b50915050808060200190518101906104889190610752565b9150505b919050565b600854600a5460405163e641bde160e01b81526001600160a01b03918216600482015291169063e641bde190602401600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b5050600854600b5460405163e641bde160e01b81526001600160a01b0391821660048201529116925063e641bde19150602401600060405180830381600087803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b5050600a5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b50506040516301f7b4f360e41b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9250631f7b4f309150602401600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b03166348c54b9d6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561067957600080fd5b505af115801561068d573d6000803e3d6000fd5b50505050565b610aa88061077583390190565b60628061121d83390190565b6000602082840312156106be57600080fd5b81516001600160a01b03811681146106d557600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b6000815160005b8181101561071357602081850181015186830152016106f9565b50600093019283525090919050565b6001600160e01b031983168152600061073e60048301846106f2565b949350505050565b60006106d582846106f2565b60006020828403121561076457600080fd5b815180151581146106d557600080fdfe608060405260008055600060025534801561001957600080fd5b50604051610aa8380380610aa88339810160408190526100389161009f565b604051829061004690610092565b908152602001604051809103906000f080158015610068573d6000803e3d6000fd5b50600380546001600160a01b0319166001600160a01b0392909216919091179055600255506100c3565b61062d8061047b83390190565b600080604083850312156100b257600080fd5b505080516020909101519092909150565b6103a9806100d26000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633feb5f2b1461005c57806348c54b9d1461008c57806383c64ec414610096578063e641bde1146100ac578063fc0c546a1461010b575b600080fd5b61006f61006a366004610273565b61011e565b6040516001600160a01b0390911681526020015b60405180910390f35b610094610148565b005b61009e61022c565b604051908152602001610083565b6100946100ba36600461028c565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0392909216919091179055565b60035461006f906001600160a01b031681565b6001818154811061012e57600080fd5b6000918252602090912001546001600160a01b0316905081565b60008060005b6001548110156101af57336001600160a01b031660018281548110610175576101756102bc565b6000918252602090912001546001600160a01b031603610198576001925061019d565b600092505b806101a7816102e8565b91505061014e565b508115156001036101c4576101c261022c565b505b60035460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401600060405180830381600087803b15801561021057600080fd5b505af1158015610224573d6000803e3d6000fd5b505050505050565b60025460009081906102406103e843610317565b6001546000549192506102529161032b565b915061025e818361033f565b91508061026a8161035c565b50919392505050565b60006020828403121561028557600080fd5b5035919050565b60006020828403121561029e57600080fd5b81356001600160a01b03811681146102b557600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016102fa576102fa6102d2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261032657610326610301565b500690565b60008261033a5761033a610301565b500490565b8082028115828204841417610356576103566102d2565b92915050565b60008161036b5761036b6102d2565b50600019019056fea26469706673582212207e4fea0eb9134e19400e0c208b24bf3210915750d753e717f3cbdf659d9d7dc964736f6c6343000811003360c0604052600860809081526726bc902a37b5b2b760c11b60a052600090610027908261014a565b5060408051808201909152600381526241424360e81b602082015260019061004f908261014a565b5034801561005c57600080fd5b5060405161062d38038061062d83398101604081905261007b91610209565b600281905533600081815260046020526040902091909155600380546001600160a01b0319169091179055610222565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100d557607f821691505b6020821081036100f557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014557600081815260208120601f850160051c810160208610156101225750805b601f850160051c820191505b818110156101415782815560010161012e565b5050505b505050565b81516001600160401b03811115610163576101636100ab565b6101778161017184546100c1565b846100fb565b602080601f8311600181146101ac57600084156101945750858301515b600019600386901b1c1916600185901b178555610141565b600085815260208120601f198616915b828110156101db578886015182559484019460019091019084016101bc565b50858210156101f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561021b57600080fd5b5051919050565b6103fc806102316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a082311461009c5780638da5cb5b146100c557806395d89b41146100f0578063a9059cbb146100f8575b600080fd5b61006f61010d565b60405161007c9190610294565b60405180910390f35b61008e60025481565b60405190815260200161007c565b61008e6100aa3660046102fe565b6001600160a01b031660009081526004602052604090205490565b6003546100d8906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b61006f61019b565b61010b610106366004610320565b6101a8565b005b6000805461011a9061034a565b80601f01602080910402602001604051908101604052809291908181526020018280546101469061034a565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b505050505081565b6001805461011a9061034a565b336000908152600460205260409020548111156101ff5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640160405180910390fd5b336000908152600460205260408120805483929061021e90849061039a565b90915550506001600160a01b0382166000908152600460205260408120805483929061024b9084906103b3565b90915550506040518181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b818110156102c1578581018301518582016040015282016102a5565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146102f957600080fd5b919050565b60006020828403121561031057600080fd5b610319826102e2565b9392505050565b6000806040838503121561033357600080fd5b61033c836102e2565b946020939093013593505050565b600181811c9082168061035e57607f821691505b60208210810361037e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156103ad576103ad610384565b92915050565b808201808211156103ad576103ad61038456fea2646970667358221220c4e6e75e7307c2ece1e0894428fb8241e59848e7c7fb3796d4e3c4488bc0278964736f6c634300081100336080604052348015600f57600080fd5b50604580601d6000396000f3fe608060405236600a57005b600080fdfea2646970667358221220284233ea8c4d97e938847d856bfea3d4c6193f1f099b71139971ef1ad6e1b53b64736f6c63430008110033a264697066735822122056a73392d2150261066321a5548bbd854a084ce3df94328f4554d27897a15e4464736f6c63430008110033",
    "sourceMap": "261:1005:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:210;;;:::i;:::-;;742:136;;;:::i;316:38:1:-;;245:64;316:38;;;;;-1:-1:-1;;;;;189:32:10;;;171:51;;159:2;144:18;316:38:1;;;;;;;;1819:584:0;;;:::i;:::-;;;398:14:10;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:10;884:199:9;;;:::i;165:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;467:210:9;518:13;;533:11;;508:37;;;;;:::i;:::-;599:25:10;;;655:2;640:18;;633:34;587:2;572:18;508:37:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;501:4:9;:44;;-1:-1:-1;;;;;501:44:9;;;;-1:-1:-1;;;;;;501:44:9;;;;;;;;555:5;:33;;;;;;;;606:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;598:5:9;:18;;-1:-1:-1;;;;;;598:18:9;-1:-1:-1;;;;;598:18:9;;;;;;;;;;632:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;626:3:9;:16;;-1:-1:-1;;;;;;626:16:9;-1:-1:-1;;;;;626:16:9;;;;;;;;;;660:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;652:5:9;:18;;-1:-1:-1;;;;;;652:18:9;-1:-1:-1;;;;;652:18:9;;;;;;;;;;467:210::o;742:136::-;786:4;;811:5;;786:32;;-1:-1:-1;;;786:32:9;;-1:-1:-1;;;;;811:5:9;;;786:32;;;171:51:10;786:4:9;;;:16;;144:18:10;;786:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;864:5:9;;835:4;;:17;;-1:-1:-1;;;835:17:9;;864:5;835:17;;;1040:25:10;-1:-1:-1;;;;;864:5:9;;;;-1:-1:-1;835:4:9;;;-1:-1:-1;835:14:9;;1013:18:10;;835:17:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;835:35:9;;828:43;;;;:::i;:::-;742:136::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1677:51:10;;;-1:-1:-1;;;1744:18:10;;;1737:34;2196:43:0;;;;;;;;;1650:18:10;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;884:199:9:-;922:4;;947:5;;922:32;;-1:-1:-1;;;922:32:9;;-1:-1:-1;;;;;947:5:9;;;922:32;;;171:51:10;922:4:9;;;:16;;144:18:10;;922:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;964:4:9;;989:3;;964:30;;-1:-1:-1;;;964:30:9;;-1:-1:-1;;;;;989:3:9;;;964:30;;;171:51:10;964:4:9;;;-1:-1:-1;964:16:9;;-1:-1:-1;144:18:10;;964:30:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1021:5:9;;1004:24;;-1:-1:-1;;;1004:24:9;;-1:-1:-1;;;;;1021:5:9;;;1004:24;;;171:51:10;245:64:1;;-1:-1:-1;1004:8:9;;-1:-1:-1;144:18:10;;1004:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1038:10:9;;-1:-1:-1;;;1038:10:9;;1046:1;1038:10;;;1040:25:10;245:64:1;;-1:-1:-1;1038:7:9;;-1:-1:-1;1013:18:10;;1038:10:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:4;;;;;;;;;-1:-1:-1;;;;;1058:4:9;-1:-1:-1;;;;;1058:16:9;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:199::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1076:290:10:-;1146:6;1199:2;1187:9;1178:7;1174:23;1170:32;1167:52;;;1215:1;1212;1205:12;1167:52;1241:16;;-1:-1:-1;;;;;1286:31:10;;1276:42;;1266:70;;1332:1;1329;1322:12;1266:70;1355:5;1076:290;-1:-1:-1;;;1076:290:10:o;1371:127::-;1432:10;1427:3;1423:20;1420:1;1413:31;1463:4;1460:1;1453:15;1487:4;1484:1;1477:15;1782:322;1823:3;1861:5;1855:12;1885:1;1895:128;1909:6;1906:1;1903:13;1895:128;;;2006:4;1991:13;;;1987:24;;1981:31;1968:11;;;1961:52;1924:12;1895:128;;;-1:-1:-1;2078:1:10;2042:16;;2067:13;;;-1:-1:-1;2042:16:10;;1782:322;-1:-1:-1;1782:322:10:o;2109:278::-;-1:-1:-1;;;;;;2294:33:10;;2282:46;;2264:3;2344:37;2378:1;2369:11;;2361:6;2344:37;:::i;:::-;2337:44;2109:278;-1:-1:-1;;;;2109:278:10:o;2392:189::-;2521:3;2546:29;2571:3;2563:6;2546:29;:::i;2586:277::-;2653:6;2706:2;2694:9;2685:7;2681:23;2677:32;2674:52;;;2722:1;2719;2712:12;2674:52;2754:9;2748:16;2807:5;2800:13;2793:21;2786:5;2783:32;2773:60;;2829:1;2826;2819:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAddInvestor()": "1ac22470",
    "testAddingManyInvestors()": "66539a95",
    "testAddingManyInvestorsAndClaiming()": "468f5e58",
    "testClaim()": "f33cf57b",
    "testCorrectPayoutAmount()": "5015b144",
    "testInitialBalance()": "4a4507ff",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddInvestor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddingManyInvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddingManyInvestorsAndClaiming\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCorrectPayoutAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Contract.t.sol\":\"ContractTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x4424dbcb8f5b741475445726f87408fcd89951fad973bec2ca442ee157f910e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0b9f6dfb69245d8f888558ae82bf1d2cdeace46201444fe4b2e6a5283f944a\",\"dweb:/ipfs/QmWFSKeFEZngNcwNn7A84EF7pASo5qe6r5oK24r9Kwca7Z\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa85dee62f7a3d7d3b26051f28d08bbfaa6d76888b8e64395583c35f11070372b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3ecace3d6120731c4520f651c36658940df958755a2c86d6bf0ec895320a915\",\"dweb:/ipfs/QmVGbUYLtMsAYF3C27qHKs3VHRuRNDypuDfs4XGK47kqUT\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x63fc2487cf3a6650d933e18bcb61766f15f74c327192381806ea00f8f6446f66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aad99f7b2ed3b11ff6c17b84b4196c562898640a80cabc2c28c87c116099a00f\",\"dweb:/ipfs/QmQNNbxHabRycegyXwJWBDutrdcScAP2SU5zEvorWEaFpx\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"src/DeFi1.sol\":{\"keccak256\":\"0x7a4efcc9a77f071535fd53386d995086265b833b6bd7ad16d7120262aeef9793\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://40af8606c4eed6ede47b9313bf0ae888e6ce05658f934d605a03941db3d574b8\",\"dweb:/ipfs/QmadEFrHejhcUpFcBG26r5s92aeTKyMTtzs3YVwixGGALK\"]},\"src/Token.sol\":{\"keccak256\":\"0xc128ea36321186ceaeb80b8ea67294297782c7e6937619e5c56b64668c6841d6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f75af6fe591e82712f873da5757e178d5f6a1d01e60bc89370d741f5485e9249\",\"dweb:/ipfs/QmWutBGXhLwUxGNQ59MH5ajSWWfc7YJWH9Sy9zbBAufkaq\"]},\"test/Contract.t.sol\":{\"keccak256\":\"0xacd87910a827b8e8a18687ca33076728ae83ff0f2aa50257fe0605e360ecdf68\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://af446e6016b322a3d3872dfe8ebd5159bb0181894955af1eae7915d7f4464759\",\"dweb:/ipfs/QmS6aCfzNb1z75cu4SQAV7bE5PJUMprVk9j9KPRsPGhHJo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddInvestor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddingManyInvestors"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddingManyInvestorsAndClaiming"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCorrectPayoutAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialBalance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Contract.t.sol": "ContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x4424dbcb8f5b741475445726f87408fcd89951fad973bec2ca442ee157f910e7",
        "urls": [
          "bzz-raw://5b0b9f6dfb69245d8f888558ae82bf1d2cdeace46201444fe4b2e6a5283f944a",
          "dweb:/ipfs/QmWFSKeFEZngNcwNn7A84EF7pASo5qe6r5oK24r9Kwca7Z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa85dee62f7a3d7d3b26051f28d08bbfaa6d76888b8e64395583c35f11070372b",
        "urls": [
          "bzz-raw://f3ecace3d6120731c4520f651c36658940df958755a2c86d6bf0ec895320a915",
          "dweb:/ipfs/QmVGbUYLtMsAYF3C27qHKs3VHRuRNDypuDfs4XGK47kqUT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x63fc2487cf3a6650d933e18bcb61766f15f74c327192381806ea00f8f6446f66",
        "urls": [
          "bzz-raw://aad99f7b2ed3b11ff6c17b84b4196c562898640a80cabc2c28c87c116099a00f",
          "dweb:/ipfs/QmQNNbxHabRycegyXwJWBDutrdcScAP2SU5zEvorWEaFpx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "src/DeFi1.sol": {
        "keccak256": "0x7a4efcc9a77f071535fd53386d995086265b833b6bd7ad16d7120262aeef9793",
        "urls": [
          "bzz-raw://40af8606c4eed6ede47b9313bf0ae888e6ce05658f934d605a03941db3d574b8",
          "dweb:/ipfs/QmadEFrHejhcUpFcBG26r5s92aeTKyMTtzs3YVwixGGALK"
        ],
        "license": "UNLICENSED"
      },
      "src/Token.sol": {
        "keccak256": "0xc128ea36321186ceaeb80b8ea67294297782c7e6937619e5c56b64668c6841d6",
        "urls": [
          "bzz-raw://f75af6fe591e82712f873da5757e178d5f6a1d01e60bc89370d741f5485e9249",
          "dweb:/ipfs/QmWutBGXhLwUxGNQ59MH5ajSWWfc7YJWH9Sy9zbBAufkaq"
        ],
        "license": "UNLICENSED"
      },
      "test/Contract.t.sol": {
        "keccak256": "0xacd87910a827b8e8a18687ca33076728ae83ff0f2aa50257fe0605e360ecdf68",
        "urls": [
          "bzz-raw://af446e6016b322a3d3872dfe8ebd5159bb0181894955af1eae7915d7f4464759",
          "dweb:/ipfs/QmS6aCfzNb1z75cu4SQAV7bE5PJUMprVk9j9KPRsPGhHJo"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 21980,
    "exportedSymbols": {
      "ContractTest": [
        21979
      ],
      "DSTest": [
        1786
      ],
      "DeFi1": [
        21719
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3553
      ],
      "Test": [
        3455
      ],
      "Token": [
        21818
      ],
      "User": [
        21830
      ],
      "Vm": [
        5423
      ],
      "console": [
        13487
      ],
      "console2": [
        21551
      ],
      "stdError": [
        3525
      ],
      "stdMath": [
        4794
      ],
      "stdStorage": [
        4655
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1228:9",
    "nodes": [
      {
        "id": 21820,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21821,
        "nodeType": "ImportDirective",
        "src": "65:26:9",
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21980,
        "sourceUnit": 5424,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21822,
        "nodeType": "ImportDirective",
        "src": "92:28:9",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21980,
        "sourceUnit": 4795,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21823,
        "nodeType": "ImportDirective",
        "src": "121:31:9",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21980,
        "sourceUnit": 13488,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21824,
        "nodeType": "ImportDirective",
        "src": "153:26:9",
        "absolutePath": "src/DeFi1.sol",
        "file": "../src/DeFi1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21980,
        "sourceUnit": 21720,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21825,
        "nodeType": "ImportDirective",
        "src": "180:26:9",
        "absolutePath": "src/Token.sol",
        "file": "../src/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21980,
        "sourceUnit": 21819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21830,
        "nodeType": "ContractDefinition",
        "src": "208:51:9",
        "nodes": [
          {
            "id": 21829,
            "nodeType": "FunctionDefinition",
            "src": "228:29:9",
            "body": {
              "id": 21828,
              "nodeType": "Block",
              "src": "255:2:9",
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 21826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "235:2:9"
            },
            "returnParameters": {
              "id": 21827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:0:9"
            },
            "scope": 21830,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21830
        ],
        "name": "User",
        "nameLocation": "217:4:9",
        "scope": 21980,
        "usedErrors": []
      },
      {
        "id": 21979,
        "nodeType": "ContractDefinition",
        "src": "261:1005:9",
        "nodes": [
          {
            "id": 21835,
            "nodeType": "VariableDeclaration",
            "src": "297:10:9",
            "constant": false,
            "mutability": "mutable",
            "name": "defi",
            "nameLocation": "303:4:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DeFi1_$21719",
              "typeString": "contract DeFi1"
            },
            "typeName": {
              "id": 21834,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21833,
                "name": "DeFi1",
                "nameLocations": [
                  "297:5:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21719,
                "src": "297:5:9"
              },
              "referencedDeclaration": 21719,
              "src": "297:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DeFi1_$21719",
                "typeString": "contract DeFi1"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21838,
            "nodeType": "VariableDeclaration",
            "src": "313:11:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "319:5:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$21818",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 21837,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21836,
                "name": "Token",
                "nameLocations": [
                  "313:5:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21818,
                "src": "313:5:9"
              },
              "referencedDeclaration": 21818,
              "src": "313:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$21818",
                "typeString": "contract Token"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21841,
            "nodeType": "VariableDeclaration",
            "src": "330:19:9",
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "344:5:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21830",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21840,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21839,
                "name": "User",
                "nameLocations": [
                  "330:4:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21830,
                "src": "330:4:9"
              },
              "referencedDeclaration": 21830,
              "src": "330:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21830",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21844,
            "nodeType": "VariableDeclaration",
            "src": "355:17:9",
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "369:3:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21830",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21843,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21842,
                "name": "User",
                "nameLocations": [
                  "355:4:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21830,
                "src": "355:4:9"
              },
              "referencedDeclaration": 21830,
              "src": "355:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21830",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21847,
            "nodeType": "VariableDeclaration",
            "src": "378:19:9",
            "constant": false,
            "mutability": "mutable",
            "name": "chloe",
            "nameLocation": "392:5:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$21830",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 21846,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21845,
                "name": "User",
                "nameLocations": [
                  "378:4:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21830,
                "src": "378:4:9"
              },
              "referencedDeclaration": 21830,
              "src": "378:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$21830",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21850,
            "nodeType": "VariableDeclaration",
            "src": "403:28:9",
            "constant": false,
            "mutability": "mutable",
            "name": "initialAmount",
            "nameLocation": "411:13:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21848,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "403:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 21849,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "427:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "id": 21853,
            "nodeType": "VariableDeclaration",
            "src": "437:23:9",
            "constant": false,
            "mutability": "mutable",
            "name": "blockReward",
            "nameLocation": "445:11:9",
            "scope": 21979,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21851,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "437:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 21852,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "id": 21895,
            "nodeType": "FunctionDefinition",
            "src": "467:210:9",
            "body": {
              "id": 21894,
              "nodeType": "Block",
              "src": "491:186:9",
              "statements": [
                {
                  "expression": {
                    "id": 21863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21856,
                      "name": "defi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21835,
                      "src": "501:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeFi1_$21719",
                        "typeString": "contract DeFi1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21860,
                          "name": "initialAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21850,
                          "src": "518:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 21861,
                          "name": "blockReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21853,
                          "src": "533:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 21859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "508:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_DeFi1_$21719_$",
                          "typeString": "function (uint256,uint256) returns (contract DeFi1)"
                        },
                        "typeName": {
                          "id": 21858,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21857,
                            "name": "DeFi1",
                            "nameLocations": [
                              "512:5:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21719,
                            "src": "512:5:9"
                          },
                          "referencedDeclaration": 21719,
                          "src": "512:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeFi1_$21719",
                            "typeString": "contract DeFi1"
                          }
                        }
                      },
                      "id": 21862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "508:37:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DeFi1_$21719",
                        "typeString": "contract DeFi1"
                      }
                    },
                    "src": "501:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DeFi1_$21719",
                      "typeString": "contract DeFi1"
                    }
                  },
                  "id": 21864,
                  "nodeType": "ExpressionStatement",
                  "src": "501:44:9"
                },
                {
                  "expression": {
                    "id": 21871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21865,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21838,
                      "src": "555:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$21818",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 21867,
                              "name": "defi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21835,
                              "src": "569:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeFi1_$21719",
                                "typeString": "contract DeFi1"
                              }
                            },
                            "id": 21868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "574:5:9",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21585,
                            "src": "569:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Token_$21818_$",
                              "typeString": "function () view external returns (contract Token)"
                            }
                          },
                          "id": 21869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "580:7:9",
                          "memberName": "address",
                          "nodeType": "MemberAccess",
                          "src": "569:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21866,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21818,
                        "src": "563:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$21818_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 21870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "563:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$21818",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "555:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$21818",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 21872,
                  "nodeType": "ExpressionStatement",
                  "src": "555:33:9"
                },
                {
                  "expression": {
                    "id": 21878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21873,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21841,
                      "src": "598:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "606:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21830_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21875,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21874,
                            "name": "User",
                            "nameLocations": [
                              "610:4:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21830,
                            "src": "610:4:9"
                          },
                          "referencedDeclaration": 21830,
                          "src": "610:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21830",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "606:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "src": "598:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21830",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21879,
                  "nodeType": "ExpressionStatement",
                  "src": "598:18:9"
                },
                {
                  "expression": {
                    "id": 21885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21880,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21844,
                      "src": "626:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "632:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21830_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21882,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21881,
                            "name": "User",
                            "nameLocations": [
                              "636:4:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21830,
                            "src": "636:4:9"
                          },
                          "referencedDeclaration": 21830,
                          "src": "636:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21830",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "632:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "src": "626:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21830",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21886,
                  "nodeType": "ExpressionStatement",
                  "src": "626:16:9"
                },
                {
                  "expression": {
                    "id": 21892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21887,
                      "name": "chloe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21847,
                      "src": "652:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "660:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$21830_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 21889,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21888,
                            "name": "User",
                            "nameLocations": [
                              "664:4:9"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21830,
                            "src": "664:4:9"
                          },
                          "referencedDeclaration": 21830,
                          "src": "664:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$21830",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 21891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "660:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$21830",
                        "typeString": "contract User"
                      }
                    },
                    "src": "652:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$21830",
                      "typeString": "contract User"
                    }
                  },
                  "id": 21893,
                  "nodeType": "ExpressionStatement",
                  "src": "652:18:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "476:5:9",
            "parameters": {
              "id": 21854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:2:9"
            },
            "returnParameters": {
              "id": 21855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21899,
            "nodeType": "FunctionDefinition",
            "src": "683:53:9",
            "body": {
              "id": 21898,
              "nodeType": "Block",
              "src": "720:16:9",
              "statements": []
            },
            "functionSelector": "4a4507ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialBalance",
            "nameLocation": "692:18:9",
            "parameters": {
              "id": 21896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:9"
            },
            "returnParameters": {
              "id": 21897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21924,
            "nodeType": "FunctionDefinition",
            "src": "742:136:9",
            "body": {
              "id": 21923,
              "nodeType": "Block",
              "src": "776:102:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21907,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21841,
                            "src": "811:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "803:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21905,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "803:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "803:14:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21902,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21835,
                        "src": "786:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21719",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "791:11:9",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21621,
                      "src": "786:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21910,
                  "nodeType": "ExpressionStatement",
                  "src": "786:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 21914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "850:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 21912,
                              "name": "defi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21835,
                              "src": "835:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeFi1_$21719",
                                "typeString": "contract DeFi1"
                              }
                            },
                            "id": 21913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "840:9:9",
                            "memberName": "investors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21579,
                            "src": "835:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 21915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "835:17:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 21918,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21841,
                              "src": "864:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_User_$21830",
                                "typeString": "contract User"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_User_$21830",
                                "typeString": "contract User"
                              }
                            ],
                            "id": 21917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "856:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21916,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "856:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "856:14:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "835:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21911,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "828:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21922,
                  "nodeType": "ExpressionStatement",
                  "src": "828:43:9"
                }
              ]
            },
            "functionSelector": "1ac22470",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddInvestor",
            "nameLocation": "751:15:9",
            "parameters": {
              "id": 21900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:2:9"
            },
            "returnParameters": {
              "id": 21901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21966,
            "nodeType": "FunctionDefinition",
            "src": "884:199:9",
            "body": {
              "id": 21965,
              "nodeType": "Block",
              "src": "912:171:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21932,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21841,
                            "src": "947:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "939:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "939:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "939:14:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21927,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21835,
                        "src": "922:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21719",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "927:11:9",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21621,
                      "src": "922:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21935,
                  "nodeType": "ExpressionStatement",
                  "src": "922:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21941,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21844,
                            "src": "989:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "981:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "981:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21936,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21835,
                        "src": "964:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21719",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "969:11:9",
                      "memberName": "addInvestor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21621,
                      "src": "964:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21944,
                  "nodeType": "ExpressionStatement",
                  "src": "964:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21950,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21841,
                            "src": "1021:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$21830",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 21949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1013:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21948,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1013:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1013:14:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21945,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1004:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1007:5:9",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1004:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21953,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:24:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 21957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1046:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 21954,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1038:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1041:4:9",
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4813,
                      "src": "1038:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 21958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21959,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:10:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21960,
                        "name": "defi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21835,
                        "src": "1058:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeFi1_$21719",
                          "typeString": "contract DeFi1"
                        }
                      },
                      "id": 21962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1063:11:9",
                      "memberName": "claimTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21679,
                      "src": "1058:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21964,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:18:9"
                }
              ]
            },
            "functionSelector": "f33cf57b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "893:9:9",
            "parameters": {
              "id": 21925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:2:9"
            },
            "returnParameters": {
              "id": 21926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21970,
            "nodeType": "FunctionDefinition",
            "src": "1090:50:9",
            "body": {
              "id": 21969,
              "nodeType": "Block",
              "src": "1132:8:9",
              "statements": []
            },
            "functionSelector": "5015b144",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCorrectPayoutAmount",
            "nameLocation": "1099:23:9",
            "parameters": {
              "id": 21967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:2:9"
            },
            "returnParameters": {
              "id": 21968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21974,
            "nodeType": "FunctionDefinition",
            "src": "1146:50:9",
            "body": {
              "id": 21973,
              "nodeType": "Block",
              "src": "1188:8:9",
              "statements": []
            },
            "functionSelector": "66539a95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddingManyInvestors",
            "nameLocation": "1155:23:9",
            "parameters": {
              "id": 21971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:2:9"
            },
            "returnParameters": {
              "id": 21972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21978,
            "nodeType": "FunctionDefinition",
            "src": "1202:61:9",
            "body": {
              "id": 21977,
              "nodeType": "Block",
              "src": "1255:8:9",
              "statements": []
            },
            "functionSelector": "468f5e58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddingManyInvestorsAndClaiming",
            "nameLocation": "1211:34:9",
            "parameters": {
              "id": 21975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1245:2:9"
            },
            "returnParameters": {
              "id": 21976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:0:9"
            },
            "scope": 21979,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21831,
              "name": "Test",
              "nameLocations": [
                "286:4:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3455,
              "src": "286:4:9"
            },
            "id": 21832,
            "nodeType": "InheritanceSpecifier",
            "src": "286:4:9"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          21719,
          21830
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21979,
          3455,
          2022,
          1786
        ],
        "name": "ContractTest",
        "nameLocation": "270:12:9",
        "scope": 21980,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 9
}